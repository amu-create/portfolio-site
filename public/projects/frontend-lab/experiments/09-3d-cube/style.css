* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: #0a0a0a;
    color: white;
    min-height: 100vh;
    overflow-x: hidden;
}

.container {
    padding: 20px;
    max-width: 1400px;
    margin: 0 auto;
}

.back-link {
    display: inline-block;
    color: #00ff88;
    text-decoration: none;
    margin-bottom: 20px;
    transition: transform 0.3s ease;
}

.back-link:hover {
    transform: translateX(-5px);
}

h1 {
    font-size: 3rem;
    margin-bottom: 10px;
    background: linear-gradient(45deg, #00ff88, #00d4ff);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.subtitle {
    color: #888;
    margin-bottom: 40px;
}

.scene {
    width: 400px;
    height: 400px;
    margin: 0 auto 50px;
    perspective: 1000px;
}

.cube {
    width: 200px;
    height: 200px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.1s;
    margin: 100px auto;
}

.face {
    position: absolute;
    width: 200px;
    height: 200px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 40px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    background: white;
    color: black;
}

.face-content {
    padding: 10px;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: none;
    overflow: hidden;
    word-break: break-word;
    text-align: center;
}

.face-content:focus {
    background: rgba(0, 255, 136, 0.1);
}

.face.front  { transform: rotateY(  0deg) translateZ(100px); }
.face.back   { transform: rotateY(180deg) translateZ(100px); }
.face.right  { transform: rotateY( 90deg) translateZ(100px); }
.face.left   { transform: rotateY(-90deg) translateZ(100px); }
.face.top    { transform: rotateX( 90deg) translateZ(100px); }
.face.bottom { transform: rotateX(-90deg) translateZ(100px); }

.controls {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 20px;
    padding: 30px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    max-width: 600px;
    margin: 0 auto;
}

h3 {
    color: #00ff88;
    margin-bottom: 20px;
    margin-top: 30px;
}

h3:first-child {
    margin-top: 0;
}

.control-group {
    margin-bottom: 20px;
}

.control-group label {
    display: inline-block;
    width: 120px;
    color: #ccc;
}

input[type="range"] {
    width: 200px;
    height: 6px;
    background: rgba(255, 255, 255, 0.1);
    outline: none;
    -webkit-appearance: none;
    border-radius: 3px;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 16px;
    height: 16px;
    background: #00ff88;
    border-radius: 50%;
    cursor: pointer;
}

input[type="color"] {
    width: 50px;
    height: 30px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.button-group {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-top: 20px;
}

button {
    padding: 10px 20px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 14px;
}

button:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
}

.primary-btn {
    background: linear-gradient(45deg, #00ff88, #00d4ff);
    color: #000;
    border: none;
    font-weight: bold;
}

.primary-btn:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 5px 20px rgba(0, 255, 136, 0.4);
}

.saved-cubes {
    margin-top: 20px;
}

.saved-cube-item {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 10px;
    margin-bottom: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.saved-cube-item button {
    padding: 5px 10px;
    font-size: 12px;
}

@keyframes rotate {
    from { transform: rotateX(var(--rotateX, 0deg)) rotateY(0deg) rotateZ(var(--rotateZ, 0deg)) scale(var(--scale, 1)); }
    to { transform: rotateX(var(--rotateX, 0deg)) rotateY(360deg) rotateZ(var(--rotateZ, 0deg)) scale(var(--scale, 1)); }
}

.cube.auto-rotate {
    animation: rotate 10s infinite linear;
}